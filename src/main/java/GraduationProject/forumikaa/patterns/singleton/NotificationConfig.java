package GraduationProject.forumikaa.patterns.singleton;

import GraduationProject.forumikaa.patterns.singleton.NotificationServiceImpl;
import GraduationProject.forumikaa.dao.NotificationDao;
import GraduationProject.forumikaa.dao.UserDao;
import GraduationProject.forumikaa.dao.CommentDao;
import GraduationProject.forumikaa.handler.notification.NotificationBroadcaster;
import GraduationProject.forumikaa.patterns.adapter.NotificationServiceWrapper;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Configuration;

import jakarta.annotation.PostConstruct;

/**
 * Configuration class ƒë·ªÉ kh·ªüi t·∫°o NotificationService singleton
 * ƒê∆∞·ª£c g·ªçi sau khi Spring context ƒë∆∞·ª£c kh·ªüi t·∫°o
 */
@Configuration
public class NotificationConfig {
    
    @Autowired
    private NotificationBroadcaster notificationBroadcaster;
    
    @Autowired
    private NotificationDao notificationDao;
    
    @Autowired
    private UserDao userDao;
    
    @Autowired
    private CommentDao commentDao;
    
    /**
     * Kh·ªüi t·∫°o NotificationService singleton sau khi Spring context ƒë∆∞·ª£c t·∫°o
     * Method n√†y s·∫Ω ƒë∆∞·ª£c g·ªçi t·ª± ƒë·ªông sau khi t·∫•t c·∫£ beans ƒë∆∞·ª£c kh·ªüi t·∫°o
     * S·ª≠ d·ª•ng Adapter Pattern thay v√¨ truy c·∫≠p tr·ª±c ti·∫øp Singleton
     */
    @PostConstruct
    public void initializeNotificationService() {
        try {
            // L·∫•y instance c·ªßa NotificationServiceWrapper ƒë√£ ƒë∆∞·ª£c Spring qu·∫£n l√Ω
            // Thay v√¨ t·∫°o m·ªõi, ch√∫ng ta s·∫Ω inject n√≥
            System.out.println("üîÑ NotificationConfig: B·∫Øt ƒë·∫ßu kh·ªüi t·∫°o NotificationService singleton...");
            
            // L·∫•y singleton instance tr·ª±c ti·∫øp
            NotificationServiceImpl singleton = NotificationServiceImpl.getInstance();
            
            // Kh·ªüi t·∫°o singleton v·ªõi dependencies th·∫≠t
            singleton.initialize(notificationBroadcaster, notificationDao, userDao, commentDao);
            
            // Ki·ªÉm tra xem singleton ƒë√£ ƒë∆∞·ª£c kh·ªüi t·∫°o th√†nh c√¥ng ch∆∞a
            if (singleton.isInitialized()) {
                System.out.println("‚úÖ NotificationService singleton ƒë√£ ƒë∆∞·ª£c kh·ªüi t·∫°o th√†nh c√¥ng!");
                System.out.println("üìß S·∫µn s√†ng x·ª≠ l√Ω c√°c lo·∫°i notification: POST_LIKE, COMMENT_REPLY, FRIENDSHIP_REQUEST, etc.");
                System.out.println("üîß Dependencies: " + 
                    "NotificationBroadcaster=" + (notificationBroadcaster != null) + ", " +
                    "NotificationDao=" + (notificationDao != null) + ", " +
                    "UserDao=" + (userDao != null) + ", " +
                    "CommentDao=" + (commentDao != null));
            } else {
                System.err.println("‚ùå NotificationService singleton kh·ªüi t·∫°o th·∫•t b·∫°i!");
            }
            
        } catch (Exception e) {
            System.err.println("‚ùå NotificationConfig: L·ªói khi kh·ªüi t·∫°o NotificationService singleton: " + e.getMessage());
            e.printStackTrace();
        }
    }
}
