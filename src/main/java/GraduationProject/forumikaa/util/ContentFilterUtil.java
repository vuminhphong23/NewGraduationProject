package GraduationProject.forumikaa.util;

import org.springframework.stereotype.Component;

import java.util.Set;

@Component
public class ContentFilterUtil {
    // C√°c t·ª´ kh√¥ng ph√π h·ª£p c·∫ßn l·ªçc
    private static final Set<String> INAPPROPRIATE_KEYWORDS = Set.of(
            "ƒë√©o", "ƒë√©o bi·∫øt", "ƒë√©o hi·ªÉu", "ƒë√©o quan t√¢m",
            "ch√≥", "ch√≥ m√°", "ch√≥ ƒë·∫ª", "ch√≥ ch·∫øt", "ch√≥ c√°i",
            "th·∫±ng ch√≥", "con ch√≥", "ƒë·ªì ch√≥"
    );


    /**
     * Ki·ªÉm tra xem title c√≥ li√™n quan ƒë·∫øn topic kh√¥ng
     */
    public boolean isTitleRelevantToTopic(String title, String topicName) {
        if (title == null || topicName == null) return false;

        // X√≥a d·∫•u _ v√† chuy·ªÉn v·ªÅ lowercase
        String normalizedTopic = topicName.toLowerCase().replace("_", " ");
        String normalizedTitle = title.toLowerCase();
        
        // So s√°nh kh√¥ng ph√¢n bi·ªát d·∫•u
        String topicNoAccents = removeVietnameseAccents(normalizedTopic);
        String titleNoAccents = removeVietnameseAccents(normalizedTitle);
        
        return titleNoAccents.contains(topicNoAccents);
    }

    /**
     * Ki·ªÉm tra ch·∫•t l∆∞·ª£ng title
     */
    public boolean isTitleQuality(String title) {
        if (title == null || title.trim().isEmpty()) return false;

        String lowerTitle = title.toLowerCase().trim();

        // Ki·ªÉm tra ƒë·ªô d√†i t·ªëi thi·ªÉu
        if (lowerTitle.length() < 10) return false;

        // Ki·ªÉm tra ƒë·ªô d√†i t·ªëi ƒëa
        if (lowerTitle.length() > 200) return false;

        // Ki·ªÉm tra t·ª´ kh√¥ng ph√π h·ª£p (kh√¥ng ph√¢n bi·ªát d·∫•u)
        String titleNoAccents = removeVietnameseAccents(lowerTitle);
        for (String inappropriate : INAPPROPRIATE_KEYWORDS) {
            String inappropriateNoAccents = removeVietnameseAccents(inappropriate);
            if (titleNoAccents.contains(inappropriateNoAccents)) {
                return false;
            }
        }


        // Ki·ªÉm tra c√≥ qu√° nhi·ªÅu k√Ω t·ª± ƒë·∫∑c bi·ªát
        long specialCharCount = title.chars().filter(ch -> !Character.isLetterOrDigit(ch) && !Character.isWhitespace(ch)).count();
        if (specialCharCount > title.length() * 0.3) return false;

        return true;
    }

    /**
     * Ki·ªÉm tra ch·∫•t l∆∞·ª£ng content
     */
    public boolean isContentQuality(String content) {
        if (content == null || content.trim().isEmpty()) return false;

        String lowerContent = content.toLowerCase().trim();

        // Ki·ªÉm tra ƒë·ªô d√†i t·ªëi thi·ªÉu
        if (lowerContent.length() < 20) return false;

        // Ki·ªÉm tra ƒë·ªô d√†i t·ªëi ƒëa
        if (lowerContent.length() > 5000) return false;

        // Ki·ªÉm tra t·ª´ kh√¥ng ph√π h·ª£p (kh√¥ng ph√¢n bi·ªát d·∫•u)
        String contentNoAccents = removeVietnameseAccents(lowerContent);
        for (String inappropriate : INAPPROPRIATE_KEYWORDS) {
            String inappropriateNoAccents = removeVietnameseAccents(inappropriate);
            if (contentNoAccents.contains(inappropriateNoAccents)) {
                return false;
            }
        }


        return true;
    }


    /**
     * T√≠nh ƒëi·ªÉm ch·∫•t l∆∞·ª£ng t·ªïng th·ªÉ
     */
    public int calculateQualityScore(String title, String content, String link, String topicName) {
        int score = 0;

        // Title quality (40 ƒëi·ªÉm)
        if (isTitleQuality(title)) {
            score += 20;
            if (isTitleRelevantToTopic(title, topicName)) {
                score += 20;
            }
        }

        // Content quality (30 ƒëi·ªÉm)
        if (isContentQuality(content)) {
            score += 30;
        }

        // Link quality (20 ƒëi·ªÉm) - ch·ªâ c·∫ßn c√≥ link
        if (link != null && !link.trim().isEmpty()) {
            score += 20;
        }

        // Bonus points (10 ƒëi·ªÉm)
        if (title != null && content != null &&
                title.length() > 20 && content.length() > 50) {
            score += 10;
        }

        return score;
    }

    /**
     * Ki·ªÉm tra xem article c√≥ ƒë·ªß ch·∫•t l∆∞·ª£ng ƒë·ªÉ l∆∞u kh√¥ng
     */
    public boolean isArticleAcceptable(String title, String content, String link, String topicName) {
        System.out.println("üîç DEBUG: Checking article: " + title);
        System.out.println("üîç DEBUG: Topic: " + topicName);
        
        // Ph·∫£i c√≥ title v√† title ph·∫£i li√™n quan ƒë·∫øn topic
        boolean isRelevant = isTitleRelevantToTopic(title, topicName);
        System.out.println("üîç DEBUG: Title relevant to topic: " + isRelevant);
        if (title == null || !isRelevant) {
            return false;
        }

        // Title ph·∫£i c√≥ ch·∫•t l∆∞·ª£ng
        boolean isTitleGood = isTitleQuality(title);
        System.out.println("üîç DEBUG: Title quality: " + isTitleGood);
        if (!isTitleGood) {
            return false;
        }

        // Content ph·∫£i c√≥ ch·∫•t l∆∞·ª£ng (n·∫øu c√≥)
        if (content != null) {
            boolean isContentGood = isContentQuality(content);
            System.out.println("üîç DEBUG: Content quality: " + isContentGood);
            if (!isContentGood) {
                return false;
            }
        }

        // T√≠nh ƒëi·ªÉm t·ªïng th·ªÉ, ph·∫£i >= 60/100
        int score = calculateQualityScore(title, content, link, topicName);
        System.out.println("üîç DEBUG: Quality score: " + score + "/100");
        boolean isAcceptable = score >= 60;
        System.out.println("üîç DEBUG: Final acceptable: " + isAcceptable);
        return isAcceptable;
    }
    
    /**
     * X√≥a d·∫•u ti·∫øng Vi·ªát
     */
    private String removeVietnameseAccents(String text) {
        if (text == null) return "";
        
        return text.replace("√†", "a").replace("√°", "a").replace("·∫°", "a").replace("·∫£", "a").replace("√£", "a")
                  .replace("√¢", "a").replace("·∫ß", "a").replace("·∫•", "a").replace("·∫≠", "a").replace("·∫©", "a").replace("·∫´", "a")
                  .replace("ƒÉ", "a").replace("·∫±", "a").replace("·∫Ø", "a").replace("·∫∑", "a").replace("·∫≥", "a").replace("·∫µ", "a")
                  .replace("√®", "e").replace("√©", "e").replace("·∫π", "e").replace("·∫ª", "e").replace("·∫Ω", "e")
                  .replace("√™", "e").replace("·ªÅ", "e").replace("·∫ø", "e").replace("·ªá", "e").replace("·ªÉ", "e").replace("·ªÖ", "e")
                  .replace("√¨", "i").replace("√≠", "i").replace("·ªã", "i").replace("·ªâ", "i").replace("ƒ©", "i")
                  .replace("√≤", "o").replace("√≥", "o").replace("·ªç", "o").replace("·ªè", "o").replace("√µ", "o")
                  .replace("√¥", "o").replace("·ªì", "o").replace("·ªë", "o").replace("·ªô", "o").replace("·ªï", "o").replace("·ªó", "o")
                  .replace("∆°", "o").replace("·ªù", "o").replace("·ªõ", "o").replace("·ª£", "o").replace("·ªü", "o").replace("·ª°", "o")
                  .replace("√π", "u").replace("√∫", "u").replace("·ª•", "u").replace("·ªß", "u").replace("≈©", "u")
                  .replace("∆∞", "u").replace("·ª´", "u").replace("·ª©", "u").replace("·ª±", "u").replace("·ª≠", "u").replace("·ªØ", "u")
                  .replace("·ª≥", "y").replace("√Ω", "y").replace("·ªµ", "y").replace("·ª∑", "y").replace("·ªπ", "y")
                  .replace("ƒë", "d");
    }
}
